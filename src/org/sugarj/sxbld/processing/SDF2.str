/**
 * Manipulation of SDF2 abstract syntax
 *
 * @author Florian Lorenzen <florian.lorenzen@tu-berlin.de>
 */
module org/sugarj/sxbld/processing/SDF2

imports org/sugarj/languages/Sdf2


strategies
	/**
	 * Generate the SDF2 cons attribute as ATerm
	 *
	 * @type String -> Sdf2Attribute
	 */
	sxbld-sdf2-cons-attribute:
		cons-name -> attribute
		where 
			<double-quote> cons-name => cons-name-quoted;
			!term(default(appl(unquoted("cons"),
			  [fun(quoted(cons-name-quoted))]))) => attribute

    /**
     * Gives the constructor name from a cons attribute
     *
     * @type Sdf2Attribute -> String
     */
    sxbld-sdf2-cons-attribute-name-quoted:
    	term(default(appl(unquoted("cons"), [fun(quoted(cons-name-quoted))]))) -> cons-name-quoted

    /**
     * Succeeds if attribute is ATerm attribute of specified name
     *
     * @param attrib-name String
     *
     * @type Sdf2Attribute -> Sdf2Attribute
     */
    sxbld-sdf2-is-attribute(|attrib-name) =
    	?term(default(appl(unquoted(attrib-name), _))) +
    	?term(default(fun(unquoted(attrib-name))))

    /**
     * Succeeds if ATerm attribute of given name is defined in attributes
     *
     * @param attrib-name String
     *
     * @type Sdf2Attributes -> Sdf2Attributes
     */
    sxbld-sdf2-is-aterm-attribute-defined(|attrib-name) =
    	if ?no-attrs() then
    		fail
    	else
    		?attrs(attribs);
    		where(
    			<elem(\(_, a2) -> <sxbld-sdf2-is-attribute(|attrib-name)> a2\)> (attrib-name, attribs))
    	end

	/**
	 * Extracts ATerm attribute of given name from SDF2 ttributes
	 *
	 * @param attrib-name String
	 *
	 * @type Sdf2Attributes -> Sdf2Attribute
	 */
    sxbld-sdf2-extract-aterm-attribute(|attrib-name) =
    	if ?no-attrs() then
    		fail
    	else
    		?attrs(attribs);
    		<fetch-elem(sxbld-sdf2-is-attribute(|attrib-name))> attribs
    	end

	/**
	 * Gets the n-th argument of an ATerm attribute
	 *
	 * Numbering starts with 1.
	 *
	 * @param index Int
	 *
	 * @type Sdf2Attribute -> Sdf2ATerm
	 */
    sxbld-sdf2-get-arg-from-aterm-attribute(|index) =
    	?term(default(appl(_, args)));
    	<index> (index, args)

    /**
     * Gets the arguments of an ATerm attribute
     *
     * @type Sdf2Attribute -> List(Sdf2ATerm)
     */
    sxbld-sdf2-get-args-from-aterm-attribute =
    	(?term(default(appl(_, args))); !args) +
    	(?term(default(fun(_))); ![])

	/**
	 * Returns the left-most position of a labelled symbol
	 *
	 * Strategy fails if the label is not in the input list
	 *
	 * @param label String
	 *
	 * @type List(Sdf2Symbols) -> Int
	 */
	sxbld-sdf2-find-index-of-labelled-symbol(|label) =
		(?[]; fail) <+
		(?[label(unquoted(label), symbol)|_];
		 !1) <+
		(?[symbol|symbols];
		 <sxbld-sdf2-find-index-of-labelled-symbol(|label)> symbols => index;
		 !(<add> (1, index)))
