/**
 * Process judgement forms sections
 */
module org/sugarj/sxbld/processing/JudgementForms

imports org/sugarj/sxbld/Environment

imports org/sugarj/sxbld/processing/SortRenaming
        org/sugarj/sxbld/processing/SDF2Terms

imports org/sugarj/languages/SXBld

strategies
	/**
	 * Translates a judgement form to a context-free grammar
	 *
	 * A production for the SXJudgement nonterminal is generated
	 * with the given cons-attribute.
	 *
	 * @type (List(Symbols), String) -> Sdf2Grammar
	 */
	sxbld-symbols-to-cf-syntax:
		(symbols, cons-name) -> context-free-syntax(production)
		where
			<sxbld-sdf2-cons-attribute> cons-name => cons-attribute;
			!prod(symbols, sort("SXJudgement"), attrs([cons-attribute])) => production

	/**
	 * Processes a single judgement form
	 *
	 * @type SXBldJudgementForm -> HashTable(String, V)
	 */
    sxbld-process-judgement-form =
    	?SXBldJudgementForm(symbols);
    	<map(sxbld-rename-all-sorts)> symbols => renamed-symbols;
    	<sxbld-env-fresh-judgement-name> () => judgement-name;
    	<sxbld-symbols-to-cf-syntax> (renamed-symbols, judgement-name) => grammar;
    	<sxbld-env-add-grammar-elems> [grammar-elem(grammar)]

    /**
     * Process judgement forms section
     *
     * Transforms judgement forms section to SDF2 and Stratego.
     * Stores the syntax, the sorts, and the form declaration in the environment.
     *
     * @type SXBldJudgementForms -> ToplevelDeclaration
     */
    sxbld-process-judgement-forms:
    	SXBldJudgementForms(judgement-forms) -> extension-decls
    	where
    		<map(sxbld-process-judgement-form)> judgement-forms;
    		sxbld-env-extract-extension-decls => extension-decls