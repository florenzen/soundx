//
// Copyright (c) 2015, TU Berlin
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
// - Redistributions of source code must retain the above copyright
//   notice, this list of conditions and the following disclaimer.
// - Redistributions in binary form must reproduce the above
//   copyright notice, this list of conditions and the following
//   disclaimer in the documentation and/or other materials provided
//   with the distribution.
// - Neither the name of the TU Berlin nor the names of its
//   contributors may be used to endorse or promote products derived
//   from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//

//
// Standard Sugar* editor services for syntax highlighting.
//
// Auhtor: Florian Lorenzen <florian.lorenzen@tu-berlin.de>
//
module org/sugarj/sxbld/initEditor

colorer Default, token-based highlighting
                                  
  keyword    : 127 0 85 bold      
  identifier : default            
  string     : blue               
  number     : darkgreen          
  var        : 255 0 100 italic   
  operator   : 0 0 128            
  layout     : 63 127 95 italic   

colorer System colors
                            
  darkred   = 128 0 0       
  red       = 255 0 0       
  darkgreen = 0 128 0       
  green     = 0 255 0       
  darkblue  = 0 0 128       
  blue      = 0 0 255       
  cyan      = 0 255 255     
  magenta   = 255 0 255     
  yellow    = 255 255 0     
  white     = 255 255 255   
  black     = 0 0 0         
  gray      = 128 128 128   
  grey      = gray          
  orange    = 255 165 0     
  pink      = 255 105 180   
  brown     = 139 69 19     
  default   = _      

language
  fences : ( )
  fences : { }
  fences : [ ]
  
  line comment                           : "//"
  block comment                          : "/*" * "/*"

folding
  ToplevelDeclaration

outliner
  ToplevelDeclaration

  completions SDF
    completion template : SugarDefElem =
      "context-free syntax" "\n\t" (blank)
  
    completion template : SugarDefElem =
      "lexical syntax" "\n\t" (blank)
  
    completion template : SugarDefElem =
      "syntax" "\n\t" (blank)
  
    completion template : SugarDefElem =
      "context-free restrictions" "\n\t" (blank)
  
    completion template : SugarDefElem =
      "lexical restrictions" "\n\t" (blank)
  
    completion template : SugarDefElem =
      "restrictions" "\n\t" (blank)
  
    completion template : SugarDefElem =
      "sorts" "\n\t" (blank)
  
    completion template : SugarDefElem =
      "variables" "\n\t" (blank)
  
    completion template : SugarDefElem =
      "aliases" "\n\t" (blank)
  
    completion template : SugarDefElem =
      "priorities" "\n\t" (blank)
  
    completion template : SugarDefElem = 
      "lexical variables" "\n\t" (blank)
  
    completion template : Sdf2Attribute =
      "cons" "(\"" <Name> "\")"
  
    completion template : Sdf2Attribute =
      "deprecated" "(\"" <explanation> "\")"
  
    completion template : Sdf2Attribute =
      "reject"
  
    completion template : Sdf2Attribute =
      "left"
  
    completion template : Sdf2Attribute =
      "right"
  
    completion template : Sdf2Attribute =
      "non-assoc"
  
    completion template : Sdf2Attribute =
      "avoid"
  
    completion template : Sdf2Attribute =
      "prefer"
  
    completion template : Sdf2Attribute =
      "bracket"
  
    completion template : Sdf2Attribute =
      "recover"
