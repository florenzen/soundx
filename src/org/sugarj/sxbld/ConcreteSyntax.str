module org/sugar/sxbld/ConcreteSyntax

imports org/sugarj/languages/Sdf2

imports org/sugarj/soundx/InductiveDefinitions

imports org/sugarj/sxbld/Environment

imports org/sugarj/languages/SXBld


rules
	sxbld-judgement-form-to-prod:
		SXBldJudgementForm(symbols) ->
		prod(symbols, sort("SXJudgement"), no-attrs())

	sxbld-judgement-forms-to-prods:
		judgement-forms -> [grammar-elem(context-free-syntax(productions))]
		where <map(sxbld-judgement-form-to-prod)> judgement-forms => productions

    sxbld-handle-judgement-forms:
    	SXBldJudgementForms(judgement-forms) -> extension-decls
    	where
    		<sxbld-judgement-forms-to-prods> judgement-forms => grammar-elems;
    		<sxbld-env-add-grammar-elems> grammar-elems;
    		sxbld-env-extract-extension-decls => extension-decls

    sxbld-handle-grammar-elem:
    	SXBldGrammarElems(grammars) -> extension-decls
    	where
    		<map(\grm -> grammar-elem(grm)\)> grammars => grammar-elems;
    		<sxbld-env-add-grammar-elems> grammar-elems;
    		sxbld-env-extract-extension-decls => extension-decls

    sxbld-handle-inductive-definitions:
    	SXInductiveDefinitions(inference-rules) -> extension-decls
    	where
    		<sxbld-env-add-inference-rules> inference-rules;
    		sxbld-env-extract-extension-decls => extension-decls
    		

strategies
	desugar = changed-tree(sxbld-handle-judgement-forms)
	desugar = changed-tree(sxbld-handle-inductive-definitions)
	desugar = changed-tree(sxbld-handle-grammar-elem)