definition

module org/sugarj/languages/SXBld

imports org/sugarj/languages/Sugar

imports org/sugarj/soundx/InductiveDefinitions

exports
	
  sorts
	SXBldComment SXBldCommentPart SXBldMinus SXBldEOF

  lexical syntax
    [\ \t\r\n] -> LAYOUT

  context-free restrictions
    LAYOUT? -/- [\ \t\r\n]

  lexical syntax
    SXBldComment                      -> LAYOUT
    "//" ~[\n\r]* ([\n\r] | SXBldEOF) -> SXBldComment
    "/*" SXBldCommentPart* "*/"       -> SXBldComment
    ~[\*]                             -> SXBldCommentPart
    SXBldAsterisk                     -> SXBldCommentPart
    "*"                               -> SXBldAsterisk
                                      -> SXBldEOF

  lexical restrictions
    "/**"         -/- [\/]
    "/*"          -/- [\*]
    SXBldAsterisk -/- [\/]
    SXBldEOF      -/- ~[]

  context-free restrictions
    LAYOUT? -/- [\/] . [\/]
    LAYOUT? -/- [\/] . [\*]

  sorts
  	SXBldNAME SXBldKeyword SXBldNONEMPTYSTRING

  lexical syntax
  	[a-zA-Z][a-zA-Z0-9]* -> SXBldNAME
 
    SXBldKeyword -> SXBldNAME {reject}

    "base"        -> SXBldKeyword
    "language"    -> SXBldKeyword
    "definition"  -> SXBldKeyword
    "extensible"  -> SXBldKeyword
    "base"        -> SXBldKeyword
    "file"        -> SXBldKeyword
    "extension"   -> SXBldKeyword
    "toplevel"    -> SXBldKeyword
    "declaration" -> SXBldKeyword
    "interface"   -> SXBldKeyword
    "for"         -> SXBldKeyword
    "is"          -> SXBldKeyword
    "derived"     -> SXBldKeyword
    "by"          -> SXBldKeyword
    "begin"       -> SXBldKeyword
    "end"         -> SXBldKeyword

    [a-zA-Z0-9]+ -> SXBldNONEMPTYSTRING

  sorts
  	SXJudgement SXBldIntfJudgToplevel SXBldIntfJudgInterface

  context-free syntax
  	"base" "language" "definition" SXBldNAME -> ToplevelDeclaration {cons("SXBldHeader")}


  	"extensible" "file" "extension" SXBldNONEMPTYSTRING -> ToplevelDeclaration {cons("SXBldExtensibleFileExt")}

    "base" "file" "extension" SXBldNONEMPTYSTRING -> ToplevelDeclaration {cons("SXBldBaseFileExt")}

    "toplevel" "declaration" Sdf2Sort  -> ToplevelDeclaration {cons("SXBldToplevelDeclaration")}
    "toplevel" "declarations" Sdf2Sort -> ToplevelDeclaration {cons("SXBldToplevelDeclarations")}

    "interface" Sdf2Sort -> ToplevelDeclaration {cons("SXBldInterface")}
    
    "interface" "for" SXBldIntfJudgToplevel "is" SXBldIntfJudgInterface
      "derived" "by" SXJudgement -> ToplevelDeclaration {cons("SXBldInterfaceJudgement")}

    "extension" "begin" Sdf2Sort -> ToplevelDeclaration {cons("SXBldExtensionBegin")}
    "extension" "end" Sdf2Sort   -> ToplevelDeclaration {cons("SXBldExtensionEnd")}

  sorts
  	SXBldJudgementForm SXBldJudgementForms
  	
  lexical syntax
  	"judgement" -> SXBldKeyword
  	"forms"     -> SXBldKeyword

  context-free syntax
  	"judgement" "forms" SXBldJudgementForm+ -> ToplevelDeclaration {cons("SXBldJudgementForms")}
  	
  	"{" Sdf2Symbols "}" -> SXBldJudgementForm {cons("SXBldJudgementForm")}
  	
  context-free syntax
  	SXInductiveDefinitions -> ToplevelDeclaration
    
  	Grammar+ -> ToplevelDeclaration {cons("SXBldGrammarElems")}
