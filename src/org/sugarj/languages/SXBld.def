definition

module org/sugarj/languages/SXBld

imports org/sugarj/languages/Sugar

exports
	
  sorts
	SXBldComment SCBldCommentPart SXBldMinus SXBldEOF

  lexical syntax
    [\ \t\r\n] -> LAYOUT

  context-free restrictions
    LAYOUT? -/- [\ \t\r\n]

  lexical syntax
    SXBldComment                      -> LAYOUT
    "//" ~[\n\r]* ([\n\r] | SXBldEOF) -> SXBldComment
    "/*" SXBldCommentPart* "*/"       -> SXBldComment
    ~[\*]                             -> SXBldCommentPart
    SXBldAsterisk                     -> SXBldCommentPart
    "*"                               -> SXBldAsterisk
                                      -> SXBldEOF

  lexical restrictions
    "/**"         -/- [\/]
    "/*"          -/- [\*]
    SXBldAsterisk -/- [\/]
    SXBldEOF      -/- ~[]

  context-free restrictions
    LAYOUT? -/- [\/] . [\/]
    LAYOUT? -/- [\/] . [\*]

  sorts
  	SXBldNAME SXBldKeyword SXBldNONEMPTYSTRING

  lexical syntax
  	[a-zA-Z][a-zA-Z0-9]* -> SXBldNAME
 
    SXBldKeyword -> SXBldNAME {reject}

    "base"       -> SXBldKeyword
    "language"   -> SXBldKeyword
    "definition" -> SXBldKeyword
    "extensible" -> SXBldKeyword
    "base"       -> SXBldKeyword
    "file"       -> SXBldKeyword
    "extension"  -> SXBldKeyword

    [a-zA-Z0-9]+ -> SXBldNONEMPTYSTRING

  sorts
  	SXBld SXBldHeader SXBldDecl
  	SXBldExtensibleFileExt SXBldBaseFileExt

  context-free syntax
  	SXBldHeader SXBldDecl* -> SXBld {cons("SXBld")}
  	
  	"base" "language" "definition" SXBldNAME -> SXBldHeader {cons("SXBldHeader")}


  	SXBldExtensibleFileExt -> SXBldDecl
  	SXBldBaseFileExt       -> SXBldDecl
  	
  	"extensible" "file" "extension" SXBldNONEMPTYSTRING -> SXBldExtensibleFileExt {cons("SXBldExtensibleFileExt")}

    "base" "file" "extension" SXBldNONEMPTYSTRING -> SXBldBaseFileExt {cons("SXBldBaseFileExt")}

  sorts
  	SXBldJudgementForms SXBldJudgementForms SXJudgment
  	
  lexical syntax
  	"judgement" -> SXBldKeyword
  	"forms"     -> SXBldKeyword

  context-free syntax

  	"judgement" "forms" SXBldJudgementForm+ -> ToplevelDeclaration {cons("SXBldJudgementForms")}
  	
  	"{" Sdf2Symbols "}" -> SXBldJudgementForm {cons("SXBldJudgementForm")}
  	
  	"(" SXJudgement ")" -> SXBldDecl {cons("SXJudg")}

  sorts
  	SXBldInferenceRule

  lexical syntax
  	"---" "-"* -> SXBldRULESEP
  	[a-zA-Z][a-zA-Z0-9\-\_]* -> SXBldINFRULENAME
  	
  	"inductive"   -> SXBldKeyword
  	"definitions" -> SXBldKeyword

  lexical restrictions
  	SXBldRULESEP -/- [\-]

  context-free syntax
  	"inductive" "definitions" SXBldNamedInferenceRule+ -> ToplevelDeclaration {cons("SXBldInductiveDefinitions")}
  	
  	SXBldINFRULENAME ":" SXBldInferenceRule ->
  	  SXBldNamedInferenceRule {cons("SXBldNamedInferenceRule")}

    SXBldInfRulePremises 
    SXBldRULESEP
    SXBldInfRuleConclusion 
    ->
      SXBldInferenceRule {cons("SXBldInferenceRule"),
                          layout("1.first.col == 2.first.col && 2.first.col == 3.first.col")}

    %%SXBldParenInfRulePremise+ -> SXBldInfRulePremisesEnum {cons("SXBldInfRulePremiseEnum")}
    %%SXBldInfRulePremise -> SXBldInfRulePremisesEnum {cons("SXBldInfRulePremise")}
    
    %%SXJudgement -> SXBldInfRulePremise %%{layout("1.first.col < 1.left.col")}
    %%"(" SXBldInfRulePremise ")" -> SXBldParenInfRulePremise {bracket}
    
    -> SXBldInfRulePremises {cons("SXBldInfRulePremisesNil")}
    SXJudgement SXBldInfRulePremises ->
      SXBldInfRulePremises {cons("SXBldInfRulePremisesCons"),
                            layout("1.first.col == 2.first.col")}
    
    SXJudgement -> SXBldInfRuleConclusion

  context-free start-symbols
    SXBld

  sorts
    ToplevelDeclaration

  context-free syntax
  	SXBldHeader -> ToplevelDeclaration
  	SXBldDecl   -> ToplevelDeclaration {cons("SXBldBaseDecl")}
  	
  	Grammar           -> SXBldGrammarElem    {cons("grammar-elem")}
  	SXBldGrammarElem+ -> ToplevelDeclaration {cons("SXBldExtensionDecl")}
