/**
 * Processing of a namespace declaration
 *
 * @author Florian Lorenzen <florian.lorenzen@tu-berlin.de>
 */
module org/sugarj/soundx/processing/Namespace

imports org/sugarj/soundx/Declarations
		org/sugarj/soundx/Environment
		org/sugarj/soundx/AnalysisFunctions

// imports org/sugarj/soundx/Debug


strategies
	/**
	 * Adds a namespace declaration to the list of toplevel declarations and
	 * stores the namespace identifier in the environment
	 *
	 * It aborts if there was already a previous namespace declaration.
	 *
	 * @type ToplevelDeclaration -> SXEnv
	 */
	sx-process-namespace-decl =
		?decl;
		sx-is-namespace-decl;
		if sx-env-is-namespace-defined then
			<sx-analysis-fail(|"only one namespace declaration is allowed")> decl
		else
			<sx-env-add-toplevel-declaration> decl;
			<sx-process-register-namespace> decl
			// ;<sx-debug(|"processsed namespace decl")> ""
		end

	/**
	 * Stores the namespace identifier in the environment
	 *
	 * It aborts if the import declaration is inside an extension definition.
	 *
	 * @type ToplevelDeclaration -> SXEnv
	 */
	sx-process-register-namespace =
		?decl@con#(args);
		where(
			sx-namespace-dec => (cons-name, index);
			if sx-env-is-extension-processing then
				<sx-analysis-fail(|"namespace declaration cannot be inside an extension")> decl
			else
				if <eq> (con, cons-name) then
					<index> (<add> (index, 1), args) => namespace;
					// <sx-debug(|"registered namespace ")> namespace;
					<sx-env-set-namespace> namespace
				else
					id
				end
			end)
