/**
 * Processing of a desugarings section
 *
 * @author Florian Lorenzen <florian.lorenzen@tu-berlin.de>
 */
module org/sugarj/soundx/processing/Desugarings

imports org/sugarj/soundx/AbstractSyntax
		org/sugarj/soundx/Environment
		org/sugarj/soundx/ExtensionDefinition
		org/sugarj/soundx/AnalysisFunctions

// imports org/sugarj/soundx/Debug


strategies
	/**
	 * Processes a desugarings section
	 *
	 * Aborts with an error, if extension processing is off
	 *
	 * @type ToplevelDeclaration -> ToplevelDeclaration
	 */
	sx-process-desugarings =
		?SXDesugarings(_);
		where(
			if sx-env-is-extension-processing then
				SXDesugarings(map(sx-process-desugaring))
			else
				sx-analysis-fail(|"desugarings must be inside an extension")
			end)

	/**
	 * Processes one desugaring
	 *
	 * The desugaring is converted to abstract syntax and stored
	 * in the environment.
	 *
	 * @type SXDesugaring -> SXEnv
	 */
	sx-process-desugaring =
		sx-process-guarded-desugaring +
		sx-process-universal-desugaring

	/**
	 * Processes a universal desugaring
	 *
	 * The desugaring is converted to abstract syntax and stored
	 * in the environment.
	 *
	 * @type SXDesugaring -> SXEnv
	 */
	sx-process-universal-desugaring =
		?SXUniversalDesugaring(lhs, _, rhs);
		!SXUnivDesug(lhs, rhs) => desugaring;
		<sx-env-add-desugaring> desugaring
		// ;<sx-debug(|"added universal desugaring ")> desugaring

	/**
	 * Processes a guarded desugaring
	 *
	 * The conclusion of the left-hand side is split into
	 * before, subject, and after expressions and converted
	 * to abstract syntax.
	 *
	 * The desugaring is stored in the environment.
	 *
	 * @type SXDesugaring -> SXEnv
	 */
	sx-process-guarded-desugaring =
		?con#(args);
		<sx-process-split-guarded-des-cons> con => (index, judg-name);
		<length> args => len;
		<index> (1, args) => premises;
		<collect-all(sx-is-judgement, conc)> premises => premises-list;
		<index> (len, args) => rhs;
		<drop(|2); take(|<subt> (len, 4))> args => concl-args;
		<split-at(|<subt> (index, 1))> concl-args => (exprs-before, [expr-subject|exprs-after]);
		!SXGuardDesug(premises-list, exprs-before, expr-subject, exprs-after, judg-name, rhs) => desugaring;
		<sx-env-add-desugaring> desugaring
		// ; <sx-debug(|"added guarded desugaring ")> desugaring

	/**
	 * Splits the constructor name of a guarded desugaring
	 *
	 * It returns the judgement name of the left-hand side's
	 * conclusion and the index of the subject expression.
	 *
	 * It fails if the input is not the cinstructor name of a
	 * guarded desugaring.
	 *
	 * @type String -> (Int, String)
	 */
	sx-process-split-guarded-des-cons =
		?con;
		<string-starts-with(|"SXGuardedDesugaring")> con;
		<explode-string> con => chars;
		<drop(|19)> chars => chars-no-prefix;
		<take-while(is-num); implode-string; string-to-int> chars-no-prefix => index;
		<drop-while(is-num); implode-string> chars-no-prefix => judg-name;
		!(index, judg-name)
