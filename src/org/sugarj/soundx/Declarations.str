/**
 * All the declarations of a base language definition and of extensions
 * set to fail such that they can be referred to.
 *
 * @author Florian Lorenzen <florian.lorenzen@tu-berlin.de>
 */
module org/sugarj/soundx/Declarations

/**
 * Declarations defined in the base language
 */
strategies
	sx-inference-rules = fail
	sx-ToplevelDeclaration = fail
	sx-interface-judgement = fail
	sx-cons-names = fail
	sx-base-file-ext = fail
	sx-extensible-file-ext = fail
	sx-body-decs = fail
	sx-namespace-dec = fail
	sx-import-decs = fail
	sx-base-language-name = fail

	sx-is-body-decl =
		?con#(args);
		sx-body-decs => cons-names;
		<elem> (con, cons-names)

	sx-is-namespace-decl =
		?con#(args);
		sx-namespace-dec => (cons-name, _);
		<eq> (con, cons-name)

	sx-is-import-decl =
		?con#(args);
		//debug(!"IS IMPORT DECL? ");
		sx-import-decs; unzip => (cons-names, _);
		//debug(!"POSSIBILITIES ");
		<elem> (con, cons-names)
		//;debug(!"YES")

/**
 * Declarations defined in an extension module
 */
strategies
	sx-interface = fail
	sx-desugaring-active-module = fail
	sx-desugaring =
		sx-guarded-desugarings +
		sx-universal-desugarings
	sx-guarded-desugarings = fail
	sx-universal-desugarings = fail

	sx-interface-expr =
		?mod;
		<sx-interface> mod => (expr, _);
		!expr

	sx-interface-re-exports =
		?mod;
		<sx-interface> mod => (_, re-exports);
		!re-exports
