/*
 * Copyright (c) 2015, TU Berlin
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 * - Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 * - Redistributions in binary form must reproduce the above
 *   copyright notice, this list of conditions and the following
 *   disclaimer in the documentation and/or other materials provided
 *   with the distribution.
 * - Neither the name of the TU Berlin nor the names of its
 *   contributors may be used to endorse or promote products derived
 *   from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/**
 * All the declarations of a base language definition and of extensions
 * set to fail such that they can be referred to.
 *
 * @author Florian Lorenzen <florian.lorenzen@tu-berlin.de>
 */
module org/sugarj/soundx/Declarations

imports org/sugarj/soundx/FreshAtoms


/**
 * Declarations defined in the base language
 */
strategies
	sx-inference-rules = fail
	sx-ToplevelDeclaration = fail
	sx-interface-judgement = fail
	sx-cons-names = fail
	sx-base-file-ext = fail
	sx-extensible-file-ext = fail
	sx-body-decs = fail
	sx-namespace-dec = fail
	sx-import-decs = fail
	sx-base-language-name = fail

	sx-is-body-decl =
		?con#(args);
		sx-body-decs => cons-names;
		<elem> (con, cons-names)

	sx-is-namespace-decl =
		?con#(args);
		sx-namespace-dec => (cons-name, _);
		<eq> (con, cons-name)

	sx-is-import-decl =
		?con#(args);
		sx-import-decs; unzip => (cons-names, _);
		<elem> (con, cons-names)

/**
 * Declarations defined in an extension module
 */
strategies
	sx-interface = fail

	sx-desugaring-active-module = fail

	sx-desugaring =
		sx-guarded-desugarings +
		sx-universal-desugarings

	sx-guarded-desugarings = fail

	sx-universal-desugarings = fail

	sx-extension-inference-rules = fail

	sx-extension-cons-names = fail

	sx-freshness-conditions = fail

	sx-error-annotations = fail

	sx-extension-pp-table = fail

	sx-interface-expr =
		?mod;
		<sx-interface> mod => (expr, _);
		!expr

	sx-interface-re-exports =
		?mod;
		<sx-interface> mod => (_, re-exports);
		!re-exports
