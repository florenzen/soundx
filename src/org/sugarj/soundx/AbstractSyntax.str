/**
 * SoundX abstract syntax
 *
 * @author Florian Lorenzen <florian.lorenzen@tu-berlin.de>
 */
module org/sugarj/soundx/AbstractSyntax

imports org/sugarj/sxbld/processing/MetaExplode


/**
 * Metavariables
 */
signature constructors
	SXMetaVar: String -> SXMetaVar

strategies
	/**
	 * Translates meta-var to SXMetaVar
	 *
	 * @type a -> a
	 */
    sxbld-meta-var-to-sx-metavar =
    	topdown(try(\meta-var(name) -> SXMetaVar(name)\))

/**
 * Inference rules
 */
signature constructors
	SXAbsInfRule: List(SXJudgement) * SXJudgement -> SXAbsInfRule

/**
 * Toplevel declaration list
 */
signature constructors
	SXToplevelDeclarationsCons: SXToplevelDeclaration * SXToplevelDeclarations -> SXToplevelDeclarations
	SXToplevelDeclarationsNil:                                                    SXToplevelDeclarations

	SXFinished: List(SXToplevelDeclarations) -> SXFinished

strategies
	/**
	 * Converts list of toplevel declarations into ToplevelDeclarations
	 *
	 * @type List(SXToplevelDeclaration) -> SXToplevelDeclarations
	 */
	sx-list-to-toplevel-decls:
		[] -> SXToplevelDeclarationsNil()
	sx-list-to-toplevel-decls:
		[decl|decls] -> SXToplevelDeclarationsCons(decl, decls1)
		where
			<sx-list-to-toplevel-decls> decls => decls1

	/**
	 * Converts ToplevelDeclarations into list of toplevel declarations
	 *
	 * @type SXToplevelDeclarations -> List(SXToplevelDeclaration)
	 */
	sx-toplevel-decls-to-list:
		SXToplevelDeclarationsNil() -> []
	sx-toplevel-decls-to-list:
		SXToplevelDeclarationsCons(decl, decls) -> [decl|decls1]
		where
			<sx-toplevel-decls-to-list> decls => decls1
