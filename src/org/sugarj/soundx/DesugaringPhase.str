/**
 * SoundX desugaring phase: desugaring the derivation
 *
 * @author Florian Lorenzen <florian.lorenzen@tu-berlin.de>
 */
module org/sugarj/soundx/DesugaringPhase

imports org/sugarj/stdlib/StdTrans

imports org/sugarj/soundx/AbstractSyntax
		org/sugarj/soundx/Environment
		org/sugarj/soundx/ExtensionDefinition
		org/sugarj/soundx/Declarations
		org/sugarj/soundx/InductiveDefinitions


/**
 * Hook desugaring into SugarJ
 */
strategies
	desugar = changed-tree(sx-desugar)

strategies
	/**
	 * Main SoundX desugaring procedure
	 *
	 * DEVEL: only spit out the module header (1st declaration in environment)
	 * such that desugaring always produces something the pretty printer can
	 * handle.
	 */
	sx-desugar =
		sx-is-toplevel-declaration;
		// sx-desugar-env
		// if last topleve declaration: fire the entire desugaring procedure
		![]		

	sx-is-toplevel-declaration =
		?SXExtensionEnd(_) +
		?SXExtensionBegin(_) +
		?SXGrammarElems(_) +
		?SXInductiveDefinitions(_) +
		?SXDesugarings(_) +
		sx-is-import-decl +
		sx-is-namespace-decl +
		sx-is-body-decl

